version: '3.7'

services:
  cassandra: 
    image: cassandra:latest 
    container_name: tiktok_cassandra
    ports:
      - "9042:9042"
    environment:
      - CASSANDRA_USER=admin
      - CASSANDRA_PASSWORD=admin
    volumes:
      - cassandra-data:/var/lib/cassandra
  db:
    platform: linux/x86_64
    container_name: "gotik_db"
    image: postgres:16
    build:
      context: .
      dockerfile: db.Dockerfile
    networks:
      - default
    restart: always
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - "5432:5432"
    # setting some env vars to create the DB
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      POSTGRES_DB: gotikdb

    # we mount a data volume to make sure we don't lose data
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist PostgreSQL
    # command: --default-authentication-plugin=mysql_native_password
    
  api:
    container_name: "gotik_api"
    # we want to use the image which is build from our Dockerfile
    build:
      context: .
      dockerfile: api.Dockerfile
    ports:
      - "8080:8080"
    # we are depending on the mysql backend
    depends_on:
      - db
      - python 

    volumes:
      - .:/app/
    networks:
      - default
    
  python:
    container_name: "gotik_scraping"
    build:
      context: .
      dockerfile: scraper.Dockerfile
    depends_on:
      - db
    volumes:
      - ./scripts:/code # Mount the folder containing your Python scripts
    ports:
      - "8000:8000"
    networks:
      - default

networks:
  default:
volumes:
  postgres-data:
  cassandra-data:
